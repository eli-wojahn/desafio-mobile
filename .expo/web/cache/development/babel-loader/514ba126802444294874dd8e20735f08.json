{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useFonts, Roboto_400Regular, Roboto_500Medium } from '@expo-google-fonts/roboto';\nimport styles from \"./styles\";\nimport api from \"../../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Flatlist = function Flatlist() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    filteredDAta = _useState2[0],\n    setFilteredData = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    masterData = _useState4[0],\n    setMasterData = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    search = _useState6[0],\n    setSearch = _useState6[1];\n  useEffect(function () {\n    api.get(\"/employees\").then(function (response) {\n      console.log(response.data);\n      setFilteredData(response.data);\n      setMasterData(response.data);\n    });\n  }, []);\n  var searchFilter = function searchFilter(text) {\n    if (text) {\n      var newData = masterData.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > 1;\n      });\n      setFilteredData(newData);\n      setSearch(text);\n    } else {\n      setFilteredData(masterData);\n      setSearch(text);\n    }\n  };\n  var _useFonts = useFonts({\n      Roboto_400Regular: Roboto_400Regular,\n      Roboto_500Medium: Roboto_500Medium\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      children: _jsx(TextInput, {\n        style: styles.inputBox,\n        value: search,\n        onChangeText: function onChangeText(text) {\n          return searchFilter(text);\n        },\n        placeholder: \"Pesquisar                                                      \\uD83D\\uDD0D\"\n      })\n    }), _jsx(FlatList, {\n      data: filteredDAta,\n      keyExtractor: function keyExtractor(element) {\n        return element.name;\n      },\n      ItemSeparatorComponent: itemSeparator,\n      renderItem: showEmployee\n    })]\n  });\n};\nfunction showEmployee(item) {\n  var _item$item = item.item,\n    name = _item$item.name,\n    job = _item$item.job,\n    admission_date = _item$item.admission_date,\n    image = _item$item.image;\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.witheBox2,\n      children: [_jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 34,\n          height: 34,\n          borderRadius: 32,\n          margin: 10\n        }\n      }), _jsx(Text, {\n        style: {\n          fontFamily: 'Roboto_400Regular',\n          fontSize: 16\n        },\n        children: name\n      }), _jsx(Text, {\n        style: {\n          fontFamily: 'Roboto_400Regular'\n        },\n        children: \"V\"\n      })]\n    })\n  });\n}\nvar itemSeparator = function itemSeparator() {\n  return _jsx(View, {\n    style: styles.separator\n  });\n};\nexport default Flatlist;","map":{"version":3,"names":["React","useState","useEffect","useFonts","Roboto_400Regular","Roboto_500Medium","styles","api","Flatlist","filteredDAta","setFilteredData","masterData","setMasterData","search","setSearch","get","then","response","console","log","data","searchFilter","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","fontsLoaded","inputBox","element","name","itemSeparator","showEmployee","job","admission_date","image","witheBox2","uri","width","height","borderRadius","margin","fontFamily","fontSize","separator"],"sources":["/home/elias/personal/desafio-mobile/src/components/FlatList/flatList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, Image, TextInput } from 'react-native';\nimport { useFonts, Roboto_400Regular, Roboto_500Medium } from '@expo-google-fonts/roboto';\n\nimport styles from './styles';\nimport api from '../../services/api';\n\nconst Flatlist = () => {\n    // const [employees, setEmployees] = useState([]);\n    const [filteredDAta, setFilteredData] = useState([]);\n    const [masterData, setMasterData] = useState([]);\n    const [search, setSearch] = useState(\"\");\n\n    useEffect(() => {\n        api.get(\"/employees\").then((response) => {\n            console.log(response.data);\n            setFilteredData(response.data);\n            setMasterData(response.data);\n        })\n    }, []);\n\n    const searchFilter = (text) => {\n        if(text) {\n            const newData = masterData.filter((item) => {\n                const itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > 1;\n            });\n            setFilteredData(newData);\n            setSearch(text);\n        } else {\n            setFilteredData(masterData);\n            setSearch(text);\n        }\n    \n    }\n\n\n    let [fontsLoaded] = useFonts({\n        Roboto_400Regular,\n        Roboto_500Medium\n    });\n\n    if (!fontsLoaded) {\n        return null;\n    }\n    return (\n        <View>\n            <View>\n                <TextInput\n                    style={styles.inputBox}\n                    value={search}\n                    onChangeText={(text) => searchFilter(text)}\n                    placeholder='Pesquisar                                                      🔍' />\n            </View>\n            <FlatList\n                data={filteredDAta}\n                keyExtractor={element => element.name}\n                ItemSeparatorComponent={itemSeparator}\n                renderItem={showEmployee}\n            />\n        </View>\n    );\n};\n\nfunction showEmployee(item) {\n    const { name, job, admission_date, image } = item.item\n\n    return (\n        <View >\n            <View style={styles.witheBox2}>\n                <Image\n                    source={{ uri: image }}\n                    style={{ width: 34, height: 34, borderRadius: 32, margin: 10 }}\n                />\n                <Text style={{ fontFamily: 'Roboto_400Regular', fontSize: 16 }}>{name}</Text>\n                <Text style={{ fontFamily: 'Roboto_400Regular' }}>V</Text>\n            </View>\n        </View>\n    )\n}\n\n\n\nconst itemSeparator = () => {\n    return <View style={styles.separator}></View>\n}\n\n\nexport default Flatlist;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}